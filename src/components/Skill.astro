---
interface Props{
    name: string;
    img: string;
}

const {name, img} = Astro.props;
---

<div class="skill">
    <img src={img} alt={name} />
    <h4>{name}</h4>
</div>

<script>
    let max;
    const skills = document.querySelectorAll('.skill');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                (entry.target as HTMLElement).style.transform = 'translate(0, 0)';
                (entry.target as HTMLElement).style.opacity = '1';
                (entry.target as HTMLElement).style.transition = 'all 0.8s ease-in-out';
            }
        });
    }, {threshold: 0.3});

    skills.forEach(skill => {
        max = Math.random() < 0.5 ? -200 : 200;
        (skill as HTMLElement).style.opacity = '0';
        (skill as HTMLElement).style.transform = `translate(${Math.random() * max}%, ${Math.random() * 200}%)`;
        observer.observe(skill);
    });
    
    


</script>

<style>
    .skill{
        width: fit-content;
        height: 40px;

        border-radius: 10px;

        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-start;
        gap: 10px;

        padding: 1%;
        background-color: #5e3737;
        transition: .3s ease-in-out;
    }

    .skill:hover{
        background-color: #7d6868;
        transition: .3s ease-in-out;
    }

    .skill img{
        aspect-ratio: 1 / 1;
        width: 40px;
        object-fit: cover;
        border-radius: 10px;
    }
</style>